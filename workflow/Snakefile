# read config setted in argparse_wrapper.py 
OUTDIR = config["outdir"]
FR = config["fr"]
RR = config["rr"]
SKIP_TRIMMING = config["skip_trimming"]
LONG = config["long"]
ASSEMBLY = config["assembly"]
EXECUTION_FOLDER = config['execution_folder']
MODE = config["mode"]
PREFIX = config["prefix"]

## provide here final pipeline outputs, without intermediates 
rule all:
    input:
        f"{OUTDIR}/qc/jellyfish_genomescope/{PREFIX}_linear_plot.png",
        f"{OUTDIR}/qc/fastqc_raw/{PREFIX}_R1_fastqc.zip"
        # assembly = "",
        # quast_report = "",
        # busco_report = "",
        # annotation_gff = "",


## list here all environments
rule envs:
    input:
        trimmomatic = "../envs/trimmomatic.yaml",
        jellyfish = "../envs/jellyfish.yaml",
        genomescope = "../envs/genomescope.yaml",
        fastqc = "../envs/fastqc.yaml",
        spades = "./envs/spades.yaml",
        prokka = "./envs/prokks.yaml",

envs = rules.envs.input ## you could use envs.align in rules

if not SKIP_TRIMMING:
    FASTQC_DIR = f"{OUTDIR}/qc/fastqc_raw"
    include: "./rules/fastqc.smk"
    include: "./rules/trimmomatic.smk"
    FR = rules.trimmomatic.output.r1
    RR = rules.trimmomatic.output.r2    

# FASTQC_DIR = f"{OUTDIR}/fastqc_trimmed"
# include: "./rules/fastqc.smk"

include: "./rules/jellyfish_genomescope.smk"



# include: "./rules/spades.smk"

# ASSEMBLY = rules.assembly.output.assembly

# include: "./rules/quast.smk"

# include: "./rules/busco"

# include: "./rules/prokka.smk"

# include: './rules/kraken2.smk'

# include: "./rules/eggnog.smk"